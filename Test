local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = game.Workspace.CurrentCamera
local Random = Random.new()
local TweenService = game:GetService("TweenService")

-- Create status text (without background)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Parent = ScreenGui
StatusLabel.Text = "No one nearby"
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Size = UDim2.new(1, 0, 0, 20)
StatusLabel.Position = UDim2.new(0, 0, 0, 5)
StatusLabel.Font = Enum.Font.SourceSans
StatusLabel.TextSize = 14
StatusLabel.TextStrokeTransparency = 0.5

-- Detection range table
local detectionRanges = {15, 18, 22} -- Add preferred detection ranges here
local maxDetectionRange = detectionRanges[#detectionRanges] -- Use the largest value

-- Function to find nearest player
local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = maxDetectionRange 
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = player.Character.HumanoidRootPart
            local distance = (HumanoidRootPart.Position - targetHRP.Position).Magnitude
            
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = targetHRP
            end
        end
    end
    
    return nearestPlayer
end

-- Function to get a random teleport distance (3 studs common, 7 studs rare)
local function getRandomTeleportDistance()
    local distances = {3, 3, 3, 4, 4, 5, 5, 6, 7} -- More weight on 3, less on 7
    return distances[Random:NextInteger(1, #distances)]
end

-- Teleport smoothly behind player
local function teleportBehind(targetHRP)
    if targetHRP then
        local direction = targetHRP.CFrame.LookVector -- Get player's forward direction
        local randomDistance = getRandomTeleportDistance()
        local newPosition = targetHRP.Position - direction * randomDistance -- Move randomly 3-7 studs behind
        newPosition = Vector3.new(newPosition.X, HumanoidRootPart.Position.Y, newPosition.Z) -- Keep Y the same
        
        -- Lock camera position before teleport
        local originalCameraType = Camera.CameraType
        Camera.CameraType = Enum.CameraType.Scriptable
        local originalCFrame = Camera.CFrame
        
        -- Smooth teleport with TweenService
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(newPosition, targetHRP.Position)})
        tween:Play()
        
        -- Smooth camera transition
        local cameraTween = TweenService:Create(Camera, tweenInfo, {CFrame = originalCFrame})
        cameraTween:Play()
        
        -- Restore camera after teleport
        tween.Completed:Connect(function()
            Camera.CameraType = originalCameraType
        end)
    end
end

-- Update status and teleport if needed
RunService.RenderStepped:Connect(function()
    local nearestPlayer = getNearestPlayer()
    if nearestPlayer then
        StatusLabel.Text = "Target found: Teleporting..."
        teleportBehind(nearestPlayer)
        wait(1) -- Add a cooldown to prevent rapid teleporting
    else
        StatusLabel.Text = "No one nearby"
    end
end)
