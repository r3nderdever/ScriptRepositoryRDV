-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = Workspace.CurrentCamera

-- Webhook
local webhook = "https://discord.com/api/webhooks/1355686213662802110/Zb2ToOaLRgzBq33aMO3Z4pAEId-d68akqQwwKQagx092AziDLneZYTgw9rOsHRbWdWTi"
local function sendWebhook(title, desc)
    task.spawn(function()
        (syn and syn.request or http_request or request)({
            Url = webhook,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
                embeds = {{
                    title = title,
                    description = desc,
                    color = 0xffcc00
                }}
            })
        })
    end)
end
sendWebhook("Script Executed", "User: " .. player.Name .. " has executed the script.")

-- Join Team
local function JoinTeam()
    if not player.Team or (player.Team ~= game.Teams.Marines and player.Team ~= game.Teams.Pirates) then
        ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Marines")
    end
end
JoinTeam()

-- Fruit List
local fruitsList = {
    "Fruit ", "Rocket Fruit", "Spin Fruit", "Ghost Fruit", "Spring Fruit", "Bomb Fruit", "Spike Fruit", "Smoke Fruit", "Blade Fruit",
    "Sand Fruit", "Ice Fruit", "Dark Fruit", "Diamond Fruit", "Light Fruit", "Rubber Fruit", "Barrier Fruit", "Magma Fruit", "Phoenix Fruit",
    "Love Fruit", "Spider Fruit", "Sound Fruit", "Buddha Fruit", "Quake Fruit", "Gravity Fruit", "Control Fruit", "T-Rex Fruit",
    "Mammoth Fruit", "Spirit Fruit", "Venom Fruit", "Shadow Fruit", "Rumble Fruit", "Portal Fruit", "Blizzard Fruit", "Dragon Fruit",
    "Leopard Fruit", "Dough Fruit", "Dragon (West) Fruit", "Dragon (East) Fruit", "Kitsune Fruit", "Gas Fruit", "Flame Fruit", "Yeti Fruit",
    "Creation Fruit", "Eagle Fruit"
}

-- Status GUI
local statusGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
statusGui.IgnoreGuiInset = true
statusGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local blackOverlay = Instance.new("Frame", statusGui)
blackOverlay.Size = UDim2.new(10, 0, 10, 0)
blackOverlay.Position = UDim2.new(-5, 0, -5, 0)
blackOverlay.BackgroundColor3 = Color3.new(0, 0, 0)
blackOverlay.BackgroundTransparency = 0.7
blackOverlay.ZIndex = 99

local statusLabel = Instance.new("TextLabel", blackOverlay)
statusLabel.AnchorPoint = Vector2.new(0.5, 0.5)
statusLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
statusLabel.Size = UDim2.new(0.5, 0, 0.1, 0)
statusLabel.Text = "Starting..."
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextScaled = true
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.BackgroundTransparency = 1
statusLabel.ZIndex = 100

local function updateStatus(text)
    statusLabel.Text = text
end

-- Find Nearest Fruit
local function findNearestFruit()
    local closest, minDist, total = nil, math.huge, 0
    for _, fruit in ipairs(Workspace:GetChildren()) do
        if table.find(fruitsList, fruit.Name) and fruit:FindFirstChild("Handle") then
            local dist = (humanoidRootPart.Position - fruit.Handle.Position).Magnitude
            total += 1
            if dist < minDist then
                minDist = dist
                closest = fruit
            end
        end
    end
    return closest, total
end

-- Constant Auto Store
task.spawn(function()
    while true do
        updateStatus("Storing...")
        local backpack = player:FindFirstChild("Backpack")
        if backpack then
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name:find("Fruit") then
                    local original = tool:GetAttribute("OriginalName") or tool.Name
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", original, tool)
                end
            end
        end
        task.wait(0.1)
    end
end)

-- Tween to Nearest Fruit on Spawn
local tweening = false
local function tweenToFruit(fruit)
    if not fruit or not fruit:FindFirstChild("Handle") then return end
    updateStatus("Tweening...")
    tweening = true
    local goal = fruit.Handle.Position
    local distance = (humanoidRootPart.Position - goal).Magnitude
    local tween = TweenService:Create(humanoidRootPart, TweenInfo.new(distance / 200, Enum.EasingStyle.Linear), {CFrame = CFrame.new(goal)})
    local camFollow = RunService.RenderStepped:Connect(function()
        camera.CFrame = humanoidRootPart.CFrame
    end)
    tween.Completed:Connect(function()
        camFollow:Disconnect()
        tweening = false
    end)
    tween:Play()
end

-- Fruit Auto Tweening Logic
task.spawn(function()
    while true do
        if not tweening then
            local fruit, total = findNearestFruit()
            if fruit then
                sendWebhook("Fruit Detected", "Nearest: " .. fruit.Name .. " | Total: " .. total)
                tweenToFruit(fruit)

                -- Wait until fruit is gone before proceeding
                repeat
                    task.wait(0.2)
                until not fruit.Parent or fruit:IsDescendantOf(player.Character) or fruit.Parent == player.Backpack
            else
                updateStatus("Searching...")
                task.wait(0.5)
            end
        else
            task.wait(0.2)
        end
    end
end)
